CREATE TABLE STUDENT (  CODS INT NOT NULL, NUME VARCHAR(20), DATAN DATE);
CREATE TABLE CURS ( CODC INT  NOT NULL , DENUMIRE VARCHAR2(20), PROF VARCHAR2(20));

CREATE TABLE STUDENT (  CODS INT constraint pk_cods primary key, NUME VARCHAR(20) , DATAN DATE  );
CREATE TABLE CURS ( CODC INT constraint pk_codc primary key , DENUMIRE VARCHAR2(20), PROF VARCHAR(20));
CREATE TABLE NOTA( 
CODS INT, constraint fk_cods FOREIGN KEY(CODS) REFERENCES STUDENT(CODS),
CODC INT, constraint fk_codc FOREIGN KEY(CODC) REFERENCES CURS(CODC) ,
 NOTA INT,
 PREZENTARE INT
 );



 INSERT INTO STUDENT ( CODS, NUME, DATAN ) VALUES(1,'Maotzu','25-MAY-66');
 INSERT INTO STUDENT ( CODS, NUME, DATAN ) VALUES(2,'Alex','01-MAR-88');
 INSERT INTO STUDENT ( CODS, NUME, DATAN ) VALUES(3,'Ovi','22-NOV-87');
 INSERT INTO STUDENT ( CODS, NUME, DATAN ) VALUES(4,'Oliver','18-JAN-22');
 INSERT INTO STUDENT ( CODS, NUME, DATAN ) VALUES(5,'Maotzu','25-MAY-66');
 INSERT INTO STUDENT ( CODS, NUME, DATAN ) VALUES(6,'Alexandru','08-JUL-99');
 INSERT INTO STUDENT ( CODS, NUME, DATAN ) VALUES(7,'Elodia','31-DEC-11');
 INSERT INTO STUDENT ( CODS, NUME, DATAN ) VALUES(8,'Oliver','22-FEB-94');
 
 INSERT INTO CURS ( CODC, DENUMIRE, PROF) VALUES(1, 'MS' , 'Petrisor');
 INSERT INTO CURS ( CODC, DENUMIRE, PROF) VALUES(2, 'MS' , 'Holban');
 INSERT INTO CURS ( CODC, DENUMIRE, PROF) VALUES(3, 'PBD', 'Jian');
 INSERT INTO CURS ( CODC, DENUMIRE, PROF) VALUES(4, 'APND', 'Urs');
 INSERT INTO CURS ( CODC, DENUMIRE, PROF) VALUES(5, 'CE' , 'Iepure');
 INSERT INTO CURS ( CODC, DENUMIRE, PROF) VALUES(6, 'AAE' , 'Potzok');
 INSERT INTO CURS ( CODC, DENUMIRE, PROF) VALUES(7, 'FAA' , 'Gheena');
 
 
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(1,1,5,1);
 
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(2,1,4,2);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(2,2,8,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(2,3,9,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(2,4,4,1);
 
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(3,7,4,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(3,7,5,2);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(3,7,10,3);
   
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(4,5,7,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(4,6,10,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(4,3,9,1);
 
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(5,1,5,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(5,3,6,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(5,3,7,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(5,4,4,1);
 
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(6,1,4,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(8,1,4,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(6,3,10,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(8,3,10,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(6,5,9,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(8,5,8,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(8,4,7,1);
 INSERT INTO NOTA (CODS , CODC, NOTA, PREZENTARE) VALUES(8,4,8,1);
(a) SELECT S.NUME, C.DENUMIRE, N.NOTA FROM STUDENT S, CURS C, NOTA N WHERE S.CODS = N.CODS AND N.CODC = C.CODC;
(b1)SELECT S.NUME, C.DENUMIRE, N.NOTA FROM STUDNET S, CURS C, NOTA N WHERE S.CODS = N.CODS AND N.CODC = C.CODC AND N.NOTA < 5; 
(b2)SELECT COUNT(*) AS nr_stud_rest FROM (SELECT S.NUME, C.DENUMIRE, N.NOTA FROM STUDENT S, 
CURS C, NOTA N WHERE S.CODS = N.CODS AND N.CODC = C.CODC AND N.NOTA < 5);
(c) SELECT S.NUME , N.NOTA, C.PROF as INSCRISI FROM STUDENT S, NOTA N, CURS C
 where S.CODS = N.CODS and N.CODC = C.CODC and N.NOTA=10 AND C.PROF = 'Jian' ;
 
(d)  UPDATE NOTA SET NOTA = 5 WHERE NOTA <5;
(e) Media unui student :  select AVG(NOTA) AS MEDIE FROM NOTA WHERE NOTA.CODS = 3;
	SELECT S.NUME,AVG(N.NOTA) FROM STUDENT S, NOTA N WHERE S.CODS = N.CODS GROUP BY S.NUME ORDER BY AVG(N.NOTA);
	SELECT S.NUME,AVG(N.NOTA) FROM STUDENT S, NOTA N WHERE S.CODS = N.CODS GROUP BY S.NUME ORDER BY AVG(N.NOTA) ASC;
	SELECT S.NUME,AVG(N.NOTA) FROM STUDENT S, NOTA N WHERE S.CODS = N.CODS GROUP BY S.NUME ORDER BY AVG(N.NOTA) DESC;
	
(f)SELECT NUME,DATAN, AVG(MAXI) FROM (SELECT NUME,DATAN,CURS.CODC ,MAX(NOTA) AS MAXI FROM STUDENT, NOTA, CURS WHERE STUDENT.CODS = NOTA.CODS and NOTA.CODC = CURS.CODC GROUP BY NUME,DATAN,CURS.CODC) GROUP BY NUME, DATAN;
	
(g)SELECT NUME,DATAN, AVG(MAXI) FROM (SELECT NUME,DATAN,CURS.CODC ,MAX(NOTA) AS MAXI FROM STUDENT, NOTA, CURS WHERE STUDENT.CODS = NOTA.CODS and NOTA.CODC = CURS.CODC HAVING MAX(NOTA)> 4 GROUP BY NUME,DATAN,CURS.CODC) HAVING AVG(MAXI)>8.5 GROUP BY NUME, DATAN;




	
SELECT S.NUME,AVG(N.NOTA) FROM STUDENT S, NOTA N WHERE S.CODS = N.CODS and N.NOTA = (SELECT MAX())  GROUP BY S.NUME ORDER BY AVG(N.NOTA) ASC;

SELECT MAX(N.NOTA) FROM STUDENT S, NOTA N, CURS C WHERE S.CODS = N.CODS AND N.CODC = 4 GROUP BY S.CODS; --NOTELE MAXIME DE LA MATERIA CU NUMARU 4

SELECT MAX(N.NOTA) AS MAXMARK FROM STUDENT S, NOTA N, CURS C WHERE S.CODS = N.CODS AND N.CODC = C.CODC GROUP BY S.CODS, C.DENUMIRE;

SELECT STUDENT.NUME, AVG(MAXMARK) FROM 
	(SELECT MAX(NOTA.NOTA) AS MAXMARK FROM STUDENT , NOTA , CURS  WHERE STUDENT.CODS = NOTA.CODS AND NOTA.CODC = CURS.CODC GROUP BY STUDENT.CODS, CURS.DENUMIRE) 
	GROUP BY STUDENT.NUME;

--Afisare cea mai mare nota pt fiecare student
 select student.cods, max(nota) as max from student , nota where student.cods = nota.cods group by student.cods;	
--Afisare medii studenti ordonati crescator dupa medie
 select student.cods, avg(nota) as avg from student , nota where student.cods = nota.cods group by student.cods order by 2 asc
 -Selectare maxim de la o materie pt fiecare student
	select student.cods, max(nota) as max from student, nota, curs where student.cods = nota.cods and nota.codc = curs.codc group by student.cods
	
	
	
select STUDENT.cods, avg(maxim) from (select nume, denumire, max(nota) maxim from student, nota, curs where student.Cods = nota.Cods and nota.Codc = curs.Codc group by STUDENT.cods, denumire) group by STUDENT.cods;	
	
	
	--group by tips :
	--select country, count(CustomerID) from customers group by country order by 2[second column] desc-- how many customers I have in each country